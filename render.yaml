version: "1"

services:
  # ----------------- API Gateway (Public Web Service) -----------------
  - type: web
    name: api-gateway
    plan: free
    runtime: docker
    dockerfilePath: ./api-gateway/Dockerfile
    buildCommand: "pip install grpcio==1.60.0 grpcio-tools==1.60.0 protobuf==4.25.3 && ./scripts/generate_proto.sh"
    healthCheckPath: /healthz
    envVars:
      - key: PORT
        value: 10000
      # --- KEY CHANGE ---
      # We no longer use 'fromService' because we need to specify the internal port.
      # Render's DNS will resolve 'glossary-service' to the right container,
      # and we connect to our custom gRPC port.
      - key: GLOSSARY_SERVICE_ADDR
        value: "glossary-service:50051"
      - key: GRAPH_SERVICE_ADDR
        value: "graph-service:50052"
      - key: PYTHONUNBUFFERED
        value: 1

  # ----------------- Glossary Service (Web Service) -----------------
  - type: web
    name: glossary-service
    plan: free
    runtime: docker
    dockerfilePath: ./glossary-service/Dockerfile
    healthCheckPath: /healthz
    envVars:
      - key: PORT
        value: 10000 # This port is used by Render's load balancer and is IGNORED by our gRPC code
      - key: DATABASE_PATH
        value: /tmp/glossary.db
      - key: PYTHONUNBUFFERED
        value: 1

  # ----------------- Graph Service (Web Service) -----------------
  - type: web
    name: graph-service
    plan: free
    runtime: docker
    dockerfilePath: ./graph-service/Dockerfile
    healthCheckPath: /healthz
    envVars:
      - key: PORT
        value: 10000 # This port is used by Render's load balancer and is IGNORED by our gRPC code
      - key: DATABASE_PATH
        value: /tmp/graph.db
      - key: PYTHONUNBUFFERED
        value: 1